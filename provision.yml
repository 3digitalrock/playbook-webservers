---
- name: Provisioning a "{{ type_name }}" server
  hosts: tag_Type_{{ type_name }}
  serial: 1
  max_fail_percentage: 49
  sudo: true
  gather_facts: false
  vars:
    type_root: /var/www/{{ type_name }}
  tasks:
    - name: Set timezone to Eastern
      command: timedatectl set-timezone America/New_York
  
    - name: Verify ubuntu user exists
      user: home=/home/ubuntu name=ubuntu state=present
      
    - name: Create the SSH directory.
      file: state=directory path=/home/ubuntu/.ssh group=ubuntu owner=ubuntu
                      
    - name: Copy Github Deploy SSH key
      copy: src=/var/lib/awx/.ssh/github.{{ type_name }} dest=/home/ubuntu/.ssh/github mode=0600 group=ubuntu owner=ubuntu

    - name: Copy SSH config file
      copy: src=/var/lib/awx/.ssh/config dest=/home/ubuntu/.ssh/config group=ubuntu owner=ubuntu
      
    - name: Make sure the known_hosts file exists
      file: path=/home/ubuntu/.ssh/known_hosts state=touch group=ubuntu owner=ubuntu
      
    - name: Make sure the authorized_key file exists
      file: path=/home/ubuntu/.ssh/authorized_keys state=touch group=ubuntu owner=ubuntu
  
    - name: Add SSH keys to authorized_key
      authorized_key: https://github.com/synth3tk.keys
      
    - name: Create the server directory
      file: group=ubuntu owner=ubuntu mode=755 state=directory path="{{ type_root }}"
      
    - name: Install system packages
      apt: pkg={{ item }} state=installed update-cache=yes
      with_items: system_packages
      
    - name: Create alternatives link for Node
      alternatives: link=/usr/bin/node name=nodejs path=/usr/bin/nodejs
      
    - name: Install supervisord
      easy_install: name=supervisor
      
    - name: Copy supervisord conf
      template: src=conf/supervisord.conf.j2 dest=/etc/supervisord.conf owner=root group=root mode=0644
      
    - name: Copy supervisord init script
      copy: src=conf/supervisord dest=/etc/init.d/supervisord owner=root group=root mode=755
      
    - name: Create the supervisord log directory.
      file: state=directory path=/var/log/supervisor group=root owner=root
      
    - name: Start supervisord and add to boot
      service: name=supervisord state=started enabled=yes
                      
    - name: Download Pagespeed Nginx module
      get_url: url=https://github.com/pagespeed/ngx_pagespeed/archive/release-{{ nps_version }}-beta.zip
               dest=/home/ubuntu/release-{{ nps_version }}-beta.zip
      
    - name: Unzip Pagespeed Nginx module
      command: unzip -q /home/ubuntu/release-{{ nps_version }}-beta.zip -d /home/ubuntu
      
    - name: Download Pagespeed psol
      get_url: url=https://dl.google.com/dl/page-speed/psol/{{ nps_version }}.tar.gz
               dest=/home/ubuntu/ngx_pagespeed-release-{{ nps_version }}-beta/{{ nps_version }}.tar.gz
               
    - name: Ungzip Pagespeed psol
      command: tar -xzf /home/ubuntu/ngx_pagespeed-release-{{ nps_version }}-beta/{{ nps_version }}.tar.gz -C /home/ubuntu/ngx_pagespeed-release-{{ nps_version }}-beta/
    
    - name: Download Nginx
      get_url: url=http://nginx.org/download/nginx-{{ nginx_version }}.tar.gz
               dest=/home/ubuntu/nginx-{{ nginx_version }}.tar.gz
               
    - name: Ungzip Nginx
      command: tar -xzf /home/ubuntu/nginx-{{ nginx_version }}.tar.gz -C /home/ubuntu
      
    - name: Build Nginx with Pagespeed
      shell: 'cd /home/ubuntu/nginx-{{ nginx_version }};{{ item }}'
      with_items:
        - ./configure --add-module=/home/ubuntu/ngx_pagespeed-release-{{ nps_version }}-beta --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --with-ipv6 --with-http_stub_status_module
        - make
        - make install
    
    - name: Copy nginx configuration file.
      copy: src=conf/nginx.{{ type_name }}.conf dest=/etc/nginx/nginx.conf
      
    - name: Create Nginx service
      copy: src=conf/nginx_service dest=/etc/init.d/nginx mode=0755
      
    - name: Start nginx and add to boot
      service: name=nginx state=started enabled=yes
    
  handlers:
    - include: handlers.yml
      
- include: deploy.yml
